name: X-HEEP CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: esl-epfl/x-heep-toolchain
  IMAGE_TAG: "" # set by the get-docker-image action

jobs:
  build-image:
    name: Build Docker Image (if necessary)
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_was_built: ${{ steps.check_files.outputs.any_changed }}
      image_tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for changes in Docker utility files
        id: check_files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            util/docker/**
            !util/docker/README.md

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Free up disk space on the runner
        if: steps.check_files.outputs.any_changed == 'true'
        run: sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost "$AGENT_TOOLSDIRECTORY"

      - name: Generate environment.yml from requirements
        if: steps.check_files.outputs.any_changed == 'true'
        run: |
          chmod +x util/python-requirements2conda.sh
          ./util/python-requirements2conda.sh

      - name: Set up Docker Buildx
        if: steps.check_files.outputs.any_changed == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container Registry
        if: steps.check_files.outputs.any_changed == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and (maybe) push Docker Image
        if: steps.check_files.outputs.any_changed == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./util/docker/dockerfile
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/image.tar

      - name: Upload image artifact for subsequent jobs
        if: steps.check_files.outputs.any_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/image.tar

  compile-apps:
    name: Compile All Apps
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get Docker image
        uses: ./.github/actions/get-docker-image
        with:
          image_was_built: ${{ needs.build-image.outputs.image_was_built }}
          image_tags: ${{ needs.build-image.outputs.image_tags }}
      - name: Run compilation tests
        run: |
          docker run --rm --workdir /workspace/x-heep -v ${{ github.workspace }}:/workspace/x-heep ${{ env.IMAGE_TAG }} \
          /bin/bash -l -c "
          make clean-all &&
          sed 's/is_included: \"no\"/is_included: \"yes\"/' -i configs/ci.hjson &&
          sed 's/num_channels:   0x1/num_channels:   0x4/' -i configs/ci.hjson &&
          sed 's/num_channels_per_master_port: 0x1/num_channels_per_master_port: 0x4/' -i configs/ci.hjson &&
          make mcu-gen X_HEEP_CFG=configs/ci.hjson &&
          python3 test/test_apps/test_apps.py \
            --compilers gcc,clang \
            --compiler-paths /tools/riscv,/tools/riscv-clang \
            --compiler-prefixes riscv32-unknown- \
            --compile-only
          "

  simulate-apps:
    name: Simulate All Apps
    runs-on: ubuntu-latest
    needs: build-image
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get Docker image
        uses: ./.github/actions/get-docker-image
        with:
          image_was_built: ${{ needs.build-image.outputs.image_was_built }}
          image_tags: ${{ needs.build-image.outputs.image_tags }}
      - name: Run simulation tests
        run: |
          docker run --rm --workdir /workspace/x-heep -v ${{ github.workspace }}:/workspace/x-heep ${{ env.IMAGE_TAG }} \
          /bin/bash -l -c "
          make clean-all &&
          sed 's/is_included: \"no\"/is_included: \"yes\"/' -i configs/ci.hjson &&
          sed 's/num_channels:   0x1/num_channels:   0x4/' -i configs/ci.hjson &&
          sed 's/num_channels_per_master_port: 0x1/num_channels_per_master_port: 0x4/' -i configs/ci.hjson &&
          make mcu-gen X_HEEP_CFG=configs/ci.hjson &&
          python3 test/test_apps/test_apps.py \
            --compilers gcc,clang \
            --compiler-paths /tools/riscv,/tools/riscv-clang \
            --compiler-prefixes riscv32-unknown-
          "

  lint:
    name: Lint Generated Files
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get Docker image
        uses: ./.github/actions/get-docker-image
        with:
          image_was_built: ${{ needs.build-image.outputs.image_was_built }}
          image_tags: ${{ needs.build-image.outputs.image_tags }}
      - name: Check generated file consistency
        run: |
          docker run --rm --workdir /workspace/x-heep -v ${{ github.workspace }}:/workspace/x-heep ${{ env.IMAGE_TAG }} \
          /bin/bash -l -c "
          make mcu-gen &&
          util/git-diff.py --error-msg '::error ::Found differences in generated SystemVerilog files.'
          "

  check-vendor:
    name: Vendor up-to-date
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install requirements
        run: pip install -r python-requirements.txt
      - name: Re-vendor and diff
        run: |
          find . -name '*.vendor.hjson' | xargs -n1 util/vendor.py --verbose &&
          util/git-diff.py --error-msg "::error ::Found differences, please re-vendor."

  black-formatter:
    name: Check Python code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: psf/black@stable
        with:
          options: "--check --verbose"
          src: >
            util/x_heep_gen
            util/mcu_gen.py
            util/structs_periph_gen.py
            util/waiver-gen.py
            util/c_gen.py
            test/test_x_heep_gen/test_peripherals.py
          version: "~= 24.8.0"

